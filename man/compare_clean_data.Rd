% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_clean_data.R
\name{compare_clean_data}
\alias{compare_clean_data}
\title{Compare and Analyze Clean Data}
\usage{
compare_clean_data(
  df_old_path,
  df_new_path,
  output_dir,
  final_vars_set,
  date_col,
  limit_to_same_date = TRUE,
  show_views = FALSE,
  save_views = FALSE
)
}
\arguments{
\item{df_old_path}{Character. Path to the old dataset file (e.g., a CSV file).}

\item{df_new_path}{Character. Path to the new dataset file (e.g., a CSV file).}

\item{output_dir}{Character. Path to the directory where the output files will be saved.}

\item{final_vars_set}{Character vector. List of variable names to include in the comparison.}

\item{date_col}{Character. Name of the column in the datasets representing the date.
The function uses this column to filter rows based on the date range.}

\item{limit_to_same_date}{Logical. Whether to filter the new dataset to match the date range of the old dataset (default: TRUE).}

\item{show_views}{Logical. Whether to display the data views in the RStudio Viewer (default: FALSE).}

\item{save_views}{Logical. Whether to save views of the dataframes to disk (default: FALSE).}
}
\value{
A list of dataframes containing the comparison results. Dataframes include numeric, factor, character, binary, date,
and other derived datasets. Entries with missing data are omitted.

The function also saves CSV files of the comparison results to the specified output directory.
If \code{save_views} is TRUE, the views of the dataframes are saved as additional files in the output directory.
}
\description{
This function compares two clean datasets, filters them based on a specified date range,
and generates outputs for numeric, factor, character, binary, date, and other data types.
The results are saved to an output directory, and optional views of the data can be displayed or saved.
}
\examples{
# Load example data
old_data <- mtcars
new_data <- mtcars

# Simulate a date column in both datasets
set.seed(123) # Ensure reproducibility
old_data$date <- as.Date("2024-01-01") + sample(0:100, nrow(old_data), replace = TRUE)
new_data$date <- as.Date("2024-01-01") + sample(50:150, nrow(new_data), replace = TRUE)

# Save the datasets to temporary CSV files
df_old_path <- tempfile(fileext = ".csv")
df_new_path <- tempfile(fileext = ".csv")
readr::write_csv(old_data, df_old_path)
readr::write_csv(new_data, df_new_path)

# Define the output directory
output_dir <- tempdir()

# Define the variables to compare
final_vars_set <- c("mpg", "cyl", "disp", "hp", "date")

# Specify the date column
date_col <- "date"

# Run the function
results <- compare_clean_data(
  df_old_path = df_old_path,
  df_new_path = df_new_path,
  output_dir = output_dir,
  final_vars_set = final_vars_set,
  date_col = date_col,
  limit_to_same_date = TRUE,
  show_views = FALSE,
  save_views = FALSE
)

# Access numeric comparison results
numeric_results <- results$numeric
}
