[{"path":"http://www.shaunporwal.com/islet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 islet authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.shaunporwal.com/islet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shaun P. Porwal. Author, maintainer.","code":""},{"path":"http://www.shaunporwal.com/islet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Porwal S (2025). islet: Provides Data Pipelining Functions. R package version 0.2.0, http://www.shaunporwal.com/islet/.","code":"@Manual{,   title = {islet: Provides Data Pipelining Functions},   author = {Shaun P. Porwal},   year = {2025},   note = {R package version 0.2.0},   url = {http://www.shaunporwal.com/islet/}, }"},{"path":"http://www.shaunporwal.com/islet/index.html","id":"islet","dir":"","previous_headings":"","what":"Provides Data Pipelining Functions","title":"Provides Data Pipelining Functions","text":"Personal R functions.","code":""},{"path":"http://www.shaunporwal.com/islet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides Data Pipelining Functions","text":"can install development version islet GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"shaunporwal/islet\")"},{"path":"http://www.shaunporwal.com/islet/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Provides Data Pipelining Functions","text":"basic example shows solve common problem: ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(islet) # Simple Example, Default '&' Border islet::make_banner(str_to_banner = 'analyze column from dataframe') #> #&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& #> #&&  analyze column from dataframe  && #> #&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& # Output Saved to Clipboard, Can Cmd+v or Ctrl+v to directly paste banner # New Banner Border Example islet::make_banner(str_to_banner = 'analyze column from dataframe',                    banner_chr = '+') #> #+++++++++++++++++++++++++++++++++++++ #> #++  analyze column from dataframe  ++ #> #+++++++++++++++++++++++++++++++++++++"},{"path":"http://www.shaunporwal.com/islet/reference/check_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","title":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","text":"Check duplicate rows dataframe based grouped columns","code":""},{"path":"http://www.shaunporwal.com/islet/reference/check_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","text":"","code":"check_duplicates(data_df, group_by_vars = NULL, print_dups = TRUE)"},{"path":"http://www.shaunporwal.com/islet/reference/check_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","text":"data_df Dataframe checked duplicates group_by_vars string vector strings column name(s) group asserting uniqueness print_dups boolean argument, TRUE, allow function display duplicate rows","code":""},{"path":"http://www.shaunporwal.com/islet/reference/check_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","text":"Duplicate rows, general variable/column groupings","code":""},{"path":"http://www.shaunporwal.com/islet/reference/check_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if there are duplicate rows in a dataframe based on grouped columns — check_duplicates","text":"","code":"# Load the dplyr package library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  # Create a sample data frame data_df <- data.frame(   ID = c(1, 1, 2, 3, 4),   Age = c(25, 25, 30, 40, 50),   Income = c(50000, 50000, 60000, 70000, 80000) )  # Call the function to check for duplicates in the entire data frame check_duplicates(data_df) #> [1] \"Duplicates Exist:\" #>   ID Age Income #> 1  1  25  50000  # Call the function to check for duplicates within the \"ID\" column check_duplicates(data_df, group_by_vars = \"ID\") #> [1] \"Duplicates Exist:\" #>   ID Age Income #> 1  1  25  50000  # Call the function to check for duplicates within the \"ID\" and \"Age\" columns check_duplicates(data_df, group_by_vars = c(\"ID\", \"Age\")) #> [1] \"Duplicates Exist:\" #>   ID Age Income #> 1  1  25  50000"},{"path":"http://www.shaunporwal.com/islet/reference/compare_clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare and Analyze Clean Data — compare_clean_data","title":"Compare and Analyze Clean Data — compare_clean_data","text":"function compares two clean datasets, filters based specified date range, generates outputs numeric, factor, character, binary, date, data types. results saved output directory, optional views data can displayed saved.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare and Analyze Clean Data — compare_clean_data","text":"","code":"compare_clean_data(   df_old_path,   df_new_path,   output_dir,   final_vars_set,   date_col,   limit_to_same_date = TRUE,   show_views = FALSE,   save_views = FALSE )"},{"path":"http://www.shaunporwal.com/islet/reference/compare_clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare and Analyze Clean Data — compare_clean_data","text":"df_old_path Character. Path old dataset file (e.g., CSV file). df_new_path Character. Path new dataset file (e.g., CSV file). output_dir Character. Path directory output files saved. final_vars_set Character vector. List variable names include comparison. date_col Character. Name column datasets representing date. function uses column filter rows based date range. limit_to_same_date Logical. Whether filter new dataset match date range old dataset (default: TRUE). show_views Logical. Whether display data views RStudio Viewer (default: FALSE). save_views Logical. Whether save views dataframes disk (default: FALSE).","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare and Analyze Clean Data — compare_clean_data","text":"list dataframes containing comparison results. Dataframes include numeric, factor, character, binary, date, derived datasets. Entries missing data omitted. function also saves CSV files comparison results specified output directory. save_views TRUE, views dataframes saved additional files output directory.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Column Names Between Two Objects — compare_columns","title":"Compare Column Names Between Two Objects — compare_columns","text":"Compares column names two objects (data frames vectors column names) provides detailed summary unique shared columns","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Column Names Between Two Objects — compare_columns","text":"","code":"compare_columns(   obj1,   obj2,   obj1_name = \"obj1\",   obj2_name = \"obj2\",   group_by_col = NULL )"},{"path":"http://www.shaunporwal.com/islet/reference/compare_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Column Names Between Two Objects — compare_columns","text":"obj1 data frame, tibble, vector column names obj2 data frame, tibble, vector column names obj1_name Character string naming first object (default: \"obj1\") obj2_name Character string naming second object (default: \"obj2\") group_by_col Character string specifying column name grouping (default: NULL)","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Column Names Between Two Objects — compare_columns","text":"list containing: filtered_objects: List objects containing unique columns summary_data: List comparison statistics tables: GT tables showing comparison results","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Column Names Between Two Objects — compare_columns","text":"","code":"# Compare column names of two data frames compare_columns(mtcars, iris) #> <div id=\"mwlefoodfi\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#mwlefoodfi table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #mwlefoodfi thead, #mwlefoodfi tbody, #mwlefoodfi tfoot, #mwlefoodfi tr, #mwlefoodfi td, #mwlefoodfi th { #>   border-style: none; #> } #>  #> #mwlefoodfi p { #>   margin: 0; #>   padding: 0; #> } #>  #> #mwlefoodfi .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #mwlefoodfi .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #mwlefoodfi .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #mwlefoodfi .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #mwlefoodfi .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #mwlefoodfi .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #mwlefoodfi .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #mwlefoodfi .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #mwlefoodfi .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #mwlefoodfi .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #mwlefoodfi .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #mwlefoodfi .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #mwlefoodfi .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #mwlefoodfi .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #mwlefoodfi .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #mwlefoodfi .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #mwlefoodfi .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #mwlefoodfi .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #mwlefoodfi .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #mwlefoodfi .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #mwlefoodfi .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #mwlefoodfi .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #mwlefoodfi .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #mwlefoodfi .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #mwlefoodfi .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #mwlefoodfi .gt_left { #>   text-align: left; #> } #>  #> #mwlefoodfi .gt_center { #>   text-align: center; #> } #>  #> #mwlefoodfi .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #mwlefoodfi .gt_font_normal { #>   font-weight: normal; #> } #>  #> #mwlefoodfi .gt_font_bold { #>   font-weight: bold; #> } #>  #> #mwlefoodfi .gt_font_italic { #>   font-style: italic; #> } #>  #> #mwlefoodfi .gt_super { #>   font-size: 65%; #> } #>  #> #mwlefoodfi .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #mwlefoodfi .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #mwlefoodfi .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #mwlefoodfi .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #mwlefoodfi .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #mwlefoodfi .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #mwlefoodfi .gt_indent_5 { #>   text-indent: 25px; #> } #>  #> #mwlefoodfi .katex-display { #>   display: inline-flex !important; #>   margin-bottom: 0.75em !important; #> } #>  #> #mwlefoodfi div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { #>   height: 0px !important; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_heading\"> #>       <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Object Comparison Summary<\/td> #>     <\/tr> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Metric\">Metric<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"obj1_value\">obj1<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"obj2_value\">obj2<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Total Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">11<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">5<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">11<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">5<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Total Rows<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">32<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">150<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique Rows<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">32<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">149<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Mutual Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">0<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">NA<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div> #> <div id=\"eexombwkke\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#eexombwkke table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #eexombwkke thead, #eexombwkke tbody, #eexombwkke tfoot, #eexombwkke tr, #eexombwkke td, #eexombwkke th { #>   border-style: none; #> } #>  #> #eexombwkke p { #>   margin: 0; #>   padding: 0; #> } #>  #> #eexombwkke .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #eexombwkke .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #eexombwkke .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #eexombwkke .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #eexombwkke .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #eexombwkke .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #eexombwkke .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #eexombwkke .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #eexombwkke .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #eexombwkke .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #eexombwkke .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #eexombwkke .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #eexombwkke .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #eexombwkke .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #eexombwkke .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #eexombwkke .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #eexombwkke .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #eexombwkke .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #eexombwkke .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #eexombwkke .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #eexombwkke .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #eexombwkke .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #eexombwkke .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #eexombwkke .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #eexombwkke .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #eexombwkke .gt_left { #>   text-align: left; #> } #>  #> #eexombwkke .gt_center { #>   text-align: center; #> } #>  #> #eexombwkke .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #eexombwkke .gt_font_normal { #>   font-weight: normal; #> } #>  #> #eexombwkke .gt_font_bold { #>   font-weight: bold; #> } #>  #> #eexombwkke .gt_font_italic { #>   font-style: italic; #> } #>  #> #eexombwkke .gt_super { #>   font-size: 65%; #> } #>  #> #eexombwkke .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #eexombwkke .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #eexombwkke .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #eexombwkke .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #eexombwkke .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #eexombwkke .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #eexombwkke .gt_indent_5 { #>   text-indent: 25px; #> } #>  #> #eexombwkke .katex-display { #>   display: inline-flex !important; #>   margin-bottom: 0.75em !important; #> } #>  #> #eexombwkke div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { #>   height: 0px !important; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_heading\"> #>       <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Column Details<\/td> #>     <\/tr> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Category\">Category<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Columns\">Columns<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique to obj1<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb<\/td><\/tr> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique to obj2<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, Species<\/td><\/tr> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Mutual Columns<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\"><\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>  # Compare vectors of column names compare_columns(names(mtcars), names(iris)) #> <div id=\"ulbfdpbcyv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#ulbfdpbcyv table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #ulbfdpbcyv thead, #ulbfdpbcyv tbody, #ulbfdpbcyv tfoot, #ulbfdpbcyv tr, #ulbfdpbcyv td, #ulbfdpbcyv th { #>   border-style: none; #> } #>  #> #ulbfdpbcyv p { #>   margin: 0; #>   padding: 0; #> } #>  #> #ulbfdpbcyv .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #ulbfdpbcyv .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #ulbfdpbcyv .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #ulbfdpbcyv .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #ulbfdpbcyv .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #ulbfdpbcyv .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #ulbfdpbcyv .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #ulbfdpbcyv .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #ulbfdpbcyv .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #ulbfdpbcyv .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #ulbfdpbcyv .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #ulbfdpbcyv .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #ulbfdpbcyv .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #ulbfdpbcyv .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #ulbfdpbcyv .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ulbfdpbcyv .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #ulbfdpbcyv .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #ulbfdpbcyv .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #ulbfdpbcyv .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ulbfdpbcyv .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #ulbfdpbcyv .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ulbfdpbcyv .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #ulbfdpbcyv .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ulbfdpbcyv .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #ulbfdpbcyv .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #ulbfdpbcyv .gt_left { #>   text-align: left; #> } #>  #> #ulbfdpbcyv .gt_center { #>   text-align: center; #> } #>  #> #ulbfdpbcyv .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #ulbfdpbcyv .gt_font_normal { #>   font-weight: normal; #> } #>  #> #ulbfdpbcyv .gt_font_bold { #>   font-weight: bold; #> } #>  #> #ulbfdpbcyv .gt_font_italic { #>   font-style: italic; #> } #>  #> #ulbfdpbcyv .gt_super { #>   font-size: 65%; #> } #>  #> #ulbfdpbcyv .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #ulbfdpbcyv .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #ulbfdpbcyv .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #ulbfdpbcyv .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #ulbfdpbcyv .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #ulbfdpbcyv .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #ulbfdpbcyv .gt_indent_5 { #>   text-indent: 25px; #> } #>  #> #ulbfdpbcyv .katex-display { #>   display: inline-flex !important; #>   margin-bottom: 0.75em !important; #> } #>  #> #ulbfdpbcyv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { #>   height: 0px !important; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_heading\"> #>       <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Object Comparison Summary<\/td> #>     <\/tr> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Metric\">Metric<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"obj1_value\">obj1<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"obj2_value\">obj2<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Total Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">11<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">5<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">11<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">5<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Total Rows<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">1<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">1<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique Rows<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">1<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">1<\/td><\/tr> #>     <tr><td headers=\"Metric\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Mutual Columns<\/td> #> <td headers=\"obj1_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">0<\/td> #> <td headers=\"obj2_value\" class=\"gt_row gt_right\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">NA<\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div> #> <div id=\"kgufivjubq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\"> #>   <style>#kgufivjubq table { #>   font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; #>   -webkit-font-smoothing: antialiased; #>   -moz-osx-font-smoothing: grayscale; #> } #>  #> #kgufivjubq thead, #kgufivjubq tbody, #kgufivjubq tfoot, #kgufivjubq tr, #kgufivjubq td, #kgufivjubq th { #>   border-style: none; #> } #>  #> #kgufivjubq p { #>   margin: 0; #>   padding: 0; #> } #>  #> #kgufivjubq .gt_table { #>   display: table; #>   border-collapse: collapse; #>   line-height: normal; #>   margin-left: auto; #>   margin-right: auto; #>   color: #333333; #>   font-size: 16px; #>   font-weight: normal; #>   font-style: normal; #>   background-color: #FFFFFF; #>   width: auto; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #A8A8A8; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #A8A8A8; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_caption { #>   padding-top: 4px; #>   padding-bottom: 4px; #> } #>  #> #kgufivjubq .gt_title { #>   color: #333333; #>   font-size: 125%; #>   font-weight: initial; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-color: #FFFFFF; #>   border-bottom-width: 0; #> } #>  #> #kgufivjubq .gt_subtitle { #>   color: #333333; #>   font-size: 85%; #>   font-weight: initial; #>   padding-top: 3px; #>   padding-bottom: 5px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-color: #FFFFFF; #>   border-top-width: 0; #> } #>  #> #kgufivjubq .gt_heading { #>   background-color: #FFFFFF; #>   text-align: center; #>   border-bottom-color: #FFFFFF; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_bottom_border { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_col_headings { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_col_heading { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 6px; #>   padding-left: 5px; #>   padding-right: 5px; #>   overflow-x: hidden; #> } #>  #> #kgufivjubq .gt_column_spanner_outer { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: normal; #>   text-transform: inherit; #>   padding-top: 0; #>   padding-bottom: 0; #>   padding-left: 4px; #>   padding-right: 4px; #> } #>  #> #kgufivjubq .gt_column_spanner_outer:first-child { #>   padding-left: 0; #> } #>  #> #kgufivjubq .gt_column_spanner_outer:last-child { #>   padding-right: 0; #> } #>  #> #kgufivjubq .gt_column_spanner { #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: bottom; #>   padding-top: 5px; #>   padding-bottom: 5px; #>   overflow-x: hidden; #>   display: inline-block; #>   width: 100%; #> } #>  #> #kgufivjubq .gt_spanner_row { #>   border-bottom-style: hidden; #> } #>  #> #kgufivjubq .gt_group_heading { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   text-align: left; #> } #>  #> #kgufivjubq .gt_empty_group_heading { #>   padding: 0.5px; #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   vertical-align: middle; #> } #>  #> #kgufivjubq .gt_from_md > :first-child { #>   margin-top: 0; #> } #>  #> #kgufivjubq .gt_from_md > :last-child { #>   margin-bottom: 0; #> } #>  #> #kgufivjubq .gt_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   margin: 10px; #>   border-top-style: solid; #>   border-top-width: 1px; #>   border-top-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 1px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 1px; #>   border-right-color: #D3D3D3; #>   vertical-align: middle; #>   overflow-x: hidden; #> } #>  #> #kgufivjubq .gt_stub { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kgufivjubq .gt_stub_row_group { #>   color: #333333; #>   background-color: #FFFFFF; #>   font-size: 100%; #>   font-weight: initial; #>   text-transform: inherit; #>   border-right-style: solid; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #>   padding-left: 5px; #>   padding-right: 5px; #>   vertical-align: top; #> } #>  #> #kgufivjubq .gt_row_group_first td { #>   border-top-width: 2px; #> } #>  #> #kgufivjubq .gt_row_group_first th { #>   border-top-width: 2px; #> } #>  #> #kgufivjubq .gt_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kgufivjubq .gt_first_summary_row { #>   border-top-style: solid; #>   border-top-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_first_summary_row.thick { #>   border-top-width: 2px; #> } #>  #> #kgufivjubq .gt_last_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_grand_summary_row { #>   color: #333333; #>   background-color: #FFFFFF; #>   text-transform: inherit; #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kgufivjubq .gt_first_grand_summary_row { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-top-style: double; #>   border-top-width: 6px; #>   border-top-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_last_grand_summary_row_top { #>   padding-top: 8px; #>   padding-bottom: 8px; #>   padding-left: 5px; #>   padding-right: 5px; #>   border-bottom-style: double; #>   border-bottom-width: 6px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_striped { #>   background-color: rgba(128, 128, 128, 0.05); #> } #>  #> #kgufivjubq .gt_table_body { #>   border-top-style: solid; #>   border-top-width: 2px; #>   border-top-color: #D3D3D3; #>   border-bottom-style: solid; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_footnotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_footnote { #>   margin: 0px; #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kgufivjubq .gt_sourcenotes { #>   color: #333333; #>   background-color: #FFFFFF; #>   border-bottom-style: none; #>   border-bottom-width: 2px; #>   border-bottom-color: #D3D3D3; #>   border-left-style: none; #>   border-left-width: 2px; #>   border-left-color: #D3D3D3; #>   border-right-style: none; #>   border-right-width: 2px; #>   border-right-color: #D3D3D3; #> } #>  #> #kgufivjubq .gt_sourcenote { #>   font-size: 90%; #>   padding-top: 4px; #>   padding-bottom: 4px; #>   padding-left: 5px; #>   padding-right: 5px; #> } #>  #> #kgufivjubq .gt_left { #>   text-align: left; #> } #>  #> #kgufivjubq .gt_center { #>   text-align: center; #> } #>  #> #kgufivjubq .gt_right { #>   text-align: right; #>   font-variant-numeric: tabular-nums; #> } #>  #> #kgufivjubq .gt_font_normal { #>   font-weight: normal; #> } #>  #> #kgufivjubq .gt_font_bold { #>   font-weight: bold; #> } #>  #> #kgufivjubq .gt_font_italic { #>   font-style: italic; #> } #>  #> #kgufivjubq .gt_super { #>   font-size: 65%; #> } #>  #> #kgufivjubq .gt_footnote_marks { #>   font-size: 75%; #>   vertical-align: 0.4em; #>   position: initial; #> } #>  #> #kgufivjubq .gt_asterisk { #>   font-size: 100%; #>   vertical-align: 0; #> } #>  #> #kgufivjubq .gt_indent_1 { #>   text-indent: 5px; #> } #>  #> #kgufivjubq .gt_indent_2 { #>   text-indent: 10px; #> } #>  #> #kgufivjubq .gt_indent_3 { #>   text-indent: 15px; #> } #>  #> #kgufivjubq .gt_indent_4 { #>   text-indent: 20px; #> } #>  #> #kgufivjubq .gt_indent_5 { #>   text-indent: 25px; #> } #>  #> #kgufivjubq .katex-display { #>   display: inline-flex !important; #>   margin-bottom: 0.75em !important; #> } #>  #> #kgufivjubq div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after { #>   height: 0px !important; #> } #> <\/style> #>   <table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\"> #>   <thead> #>     <tr class=\"gt_heading\"> #>       <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Column Details<\/td> #>     <\/tr> #>      #>     <tr class=\"gt_col_headings\"> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Category\">Category<\/th> #>       <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Columns\">Columns<\/th> #>     <\/tr> #>   <\/thead> #>   <tbody class=\"gt_table_body\"> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique to obj1<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">mpg, cyl, disp, hp, drat, wt, qsec, vs, am, gear, carb<\/td><\/tr> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Unique to obj2<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, Species<\/td><\/tr> #>     <tr><td headers=\"Category\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\">Mutual Columns<\/td> #> <td headers=\"Columns\" class=\"gt_row gt_left\" style=\"border-top-width: 1px; border-top-style: solid; border-top-color: gray85; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: gray85;\"><\/td><\/tr> #>   <\/tbody> #>    #>    #> <\/table> #> <\/div>"},{"path":"http://www.shaunporwal.com/islet/reference/compare_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Dataframes — compare_df","title":"Compare Dataframes — compare_df","text":"Compares two datasets, summarizing numeric, factor, character, binary, date, group-specific fields. Handles comparisons without new dataset.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Dataframes — compare_df","text":"","code":"compare_df(   old_data,   new_data = NULL,   suffix_term = \"\",   ind_outcomes = c(\"\"),   group_col,   add_years = FALSE )"},{"path":"http://www.shaunporwal.com/islet/reference/compare_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Dataframes — compare_df","text":"old_data Dataframe. old dataset compare. new_data Dataframe. new dataset compare. NULL, old dataset analyzed. suffix_term Character. Suffix append parsed column names (default: \"\"). ind_outcomes Character vector. Individual outcomes summarize (default: \"\"). group_col Character. Column name representing grouping variable (required). add_years Logical. Whether include year-based summaries (default: FALSE).","code":""},{"path":"http://www.shaunporwal.com/islet/reference/compare_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Dataframes — compare_df","text":"list dataframes containing comparison results: numeric_join Merged numeric fields. factor_join Merged factor fields. char_join Merged character fields. bin_join Merged binary fields. date_join Merged date fields. group_join Merged group-specific summaries.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/from_win_to_mac.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — from_win_to_mac","title":"Title — from_win_to_mac","text":"Title","code":""},{"path":"http://www.shaunporwal.com/islet/reference/from_win_to_mac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — from_win_to_mac","text":"","code":"from_win_to_mac(windows_path, mounted_drive_name)"},{"path":"http://www.shaunporwal.com/islet/reference/from_win_to_mac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — from_win_to_mac","text":"windows_path Windows path converted Mac path mounted_drive_name Mounted drive included path","code":""},{"path":"http://www.shaunporwal.com/islet/reference/from_win_to_mac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — from_win_to_mac","text":"Converted Mac path","code":""},{"path":"http://www.shaunporwal.com/islet/reference/from_win_to_mac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — from_win_to_mac","text":"","code":"# Convert a Windows path to a Mac path with a mounted drive name of \"mydrive\" from_win_to_mac(\"C:\\\\Users\\\\myname\\\\Documents\\\\myfile.txt\", \"mydrive\") #> [1] \"/Volumes/mydriveC:/Users/myname/Documents/myfile.txt\"  # Convert a Windows path to a Mac path with a mounted drive name of \"Documents\" from_win_to_mac(\"C:\\\\Users\\\\myname\\\\Documents\\\\myfile.txt\", \"Documents\") #> [1] \"/Volumes/DocumentsC:/Users/myname/Documents/myfile.txt\""},{"path":"http://www.shaunporwal.com/islet/reference/get_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Process an SQL File — get_sql","title":"Read and Process an SQL File — get_sql","text":"Reads SQL file line line, replaces tabs spaces, converts single-line SQL comments (--) C-style comments (/* ... */).","code":""},{"path":"http://www.shaunporwal.com/islet/reference/get_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Process an SQL File — get_sql","text":"","code":"get_sql(filepath)"},{"path":"http://www.shaunporwal.com/islet/reference/get_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Process an SQL File — get_sql","text":"filepath string representing path SQL file.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/get_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Process an SQL File — get_sql","text":"single string containing processed SQL code.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/get_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and Process an SQL File — get_sql","text":"","code":"# Example usage: # sql_code <- get_sql(\"path/to/sql_file.sql\")"},{"path":"http://www.shaunporwal.com/islet/reference/islet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"islet: Provides Data Pipelining Functions — islet-package","title":"islet: Provides Data Pipelining Functions — islet-package","text":"package houses data pipelining functions.","code":""},{"path":[]},{"path":"http://www.shaunporwal.com/islet/reference/islet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"islet: Provides Data Pipelining Functions — islet-package","text":"Maintainer: Shaun P. Porwal shaun.Porwal@gmail.com","code":""},{"path":"http://www.shaunporwal.com/islet/reference/make_banner.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Banner for Code Separation/Organization — make_banner","title":"Create a Banner for Code Separation/Organization — make_banner","text":"Create Banner Code Separation/Organization","code":""},{"path":"http://www.shaunporwal.com/islet/reference/make_banner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Banner for Code Separation/Organization — make_banner","text":"","code":"make_banner(str_to_banner, banner_chr = \"&\", output = TRUE)"},{"path":"http://www.shaunporwal.com/islet/reference/make_banner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Banner for Code Separation/Organization — make_banner","text":"str_to_banner String Convert Banner banner_chr Banner Boundary Character output Boolean, TRUE output, FALSE Output","code":""},{"path":"http://www.shaunporwal.com/islet/reference/make_banner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Banner for Code Separation/Organization — make_banner","text":"Invisible String","code":""},{"path":"http://www.shaunporwal.com/islet/reference/make_banner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Banner for Code Separation/Organization — make_banner","text":"","code":"make_banner(str_to_banner = 'asdf', banner_chr = '&', output = TRUE) #> #&&&&&&&&&&&& #> #&&  asdf  && #> #&&&&&&&&&&&&"},{"path":"http://www.shaunporwal.com/islet/reference/parse_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Dataframe for Analysis — parse_function","title":"Parse a Dataframe for Analysis — parse_function","text":"Processes dataframe generate summaries numeric, factor, character, binary, date, data types. Supports year-based summaries group-specific outcomes. handle cases certain column types present dataset.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/parse_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Dataframe for Analysis — parse_function","text":"","code":"parse_function(   parse_df,   suffix_term = \"\",   ind_outcomes = c(\"\"),   group_col = NULL,   add_years = FALSE )"},{"path":"http://www.shaunporwal.com/islet/reference/parse_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Dataframe for Analysis — parse_function","text":"parse_df Dataframe. Input dataframe parse analyze. suffix_term Character. Suffix append parsed column names (default: \"\"). ind_outcomes Character vector. Individual outcomes parsing group-specific summaries (default: \"\"). group_col Character. Column name representing grouping variable (default: NULL). add_years Logical. Include year-based summaries output (default: FALSE).","code":""},{"path":"http://www.shaunporwal.com/islet/reference/parse_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Dataframe for Analysis — parse_function","text":"list dataframes summarizing input dataset. includes summaries column types present input data: date_df Summaries date columns (present). binary_df Summaries binary columns (present). char_df Summaries character columns (present). factor_df Summaries factor columns (present). summary_numeric Summaries numeric columns (present). group_df Summaries group specified outcomes (applicable).","code":""},{"path":"http://www.shaunporwal.com/islet/reference/read_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Clean Raw Data — read_raw_data","title":"Read and Clean Raw Data — read_raw_data","text":"function reads CSV file performs several cleaning steps: Optionally converts column names uppercase using janitor::clean_names. Attempts parse character columns dates ymd format. Optionally converts character columns uppercase parsed dates.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/read_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Clean Raw Data — read_raw_data","text":"","code":"read_raw_data(file, col_caps = TRUE, str_caps = TRUE)"},{"path":"http://www.shaunporwal.com/islet/reference/read_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Clean Raw Data — read_raw_data","text":"file string specifying path CSV file read. col_caps Logical. Whether convert column names uppercase. Default TRUE. str_caps Logical. Whether convert string column values uppercase. Default TRUE.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/read_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Clean Raw Data — read_raw_data","text":"data frame cleaned column names data.","code":""},{"path":"http://www.shaunporwal.com/islet/reference/read_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and Clean Raw Data — read_raw_data","text":"","code":"if (FALSE) { # \\dontrun{   # Assuming 'data.csv' contains appropriate data   cleaned_data <- read_raw_data(\"data.csv\")   raw_data <- read_raw_data(\"data.csv\", col_caps = FALSE, str_caps = FALSE) } # }"},{"path":"http://www.shaunporwal.com/islet/reference/to_sql_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Format text from SQL file into proper SQL query — to_sql_query","title":"Format text from SQL file into proper SQL query — to_sql_query","text":"Format text SQL file proper SQL query","code":""},{"path":"http://www.shaunporwal.com/islet/reference/to_sql_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format text from SQL file into proper SQL query — to_sql_query","text":"","code":"to_sql_query(filepath)"},{"path":"http://www.shaunporwal.com/islet/reference/to_sql_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format text from SQL file into proper SQL query — to_sql_query","text":"filepath Path SQL file","code":""},{"path":"http://www.shaunporwal.com/islet/reference/to_sql_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format text from SQL file into proper SQL query — to_sql_query","text":"SQL query string","code":""},{"path":"http://www.shaunporwal.com/islet/reference/to_sql_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format text from SQL file into proper SQL query — to_sql_query","text":"","code":"# Path to the SQL file filepath <- system.file(\"extdata\", \"my_sql_file.sql\", package = \"my_package\")  # Call the function to read the SQL file and format it into a query to_sql_query(filepath) #> Warning: file(\"\") only supports open = \"w+\" and open = \"w+b\": using the former #> [1] \"\""}]
